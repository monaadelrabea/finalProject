package pojos;
// Generated Jun 2, 2016 7:43:06 PM by Hibernate Tools 4.3.1

import com.google.gson.annotations.Expose;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Users generated by hbm2java
 */
@Entity
@Table(name = "users", catalog = "itiproject", uniqueConstraints = @UniqueConstraint(columnNames = "userEmail")
)
public class Users implements java.io.Serializable {

    @Expose
    private Integer userId;
    @Expose
    private String userEmail;
    @Expose
    private String userImageUrl;
    
    private String password;
    @Expose
    private boolean gender;
    @Expose
    private String userName;
    @Expose
    private int ped;
    @Expose
    private String country;
    @Expose
    private String governorate;
    @Expose
    private String city;
    @Expose
    private String street;
    @Expose
    private String summery;
    @Expose
    private String professinalTiltle;
    @Expose
    private String identefire;
    @Expose
    private String token;
    @Expose
    private Integer rate;
    @Expose
    private Set<Phoneofuser> phoneofusers = new HashSet<Phoneofuser>(0);
    private Set<SocialAccounts> socialAccountses = new HashSet<SocialAccounts>(0);
    @Expose
    private Set<Portofolioforuser> portofolioforusers = new HashSet<Portofolioforuser>(0);
    private Set<Projectsforusers> projectsforuserses = new HashSet<Projectsforusers>(0);
    private Set<Porposa> porposas = new HashSet<Porposa>(0);
    private Set<Postforprojects> postforprojectses = new HashSet<Postforprojects>(0);
    @Expose
    private Set<Skilltable> skilltables = new HashSet<Skilltable>(0);

    public Users() {
    }

    public Users(String userEmail, String userImageUrl, String password, boolean gender, String userName, int ped, String country, String governorate, String city, String professinalTiltle) {
        this.userEmail = userEmail;
        this.userImageUrl = userImageUrl;
        this.password = password;
        this.gender = gender;
        this.userName = userName;
        this.ped = ped;
        this.country = country;
        this.governorate = governorate;
        this.city = city;
        this.professinalTiltle = professinalTiltle;
    }

    public Users(String userEmail, String userImageUrl, String password, boolean gender, String userName, int ped, String country, String governorate, String city, String street, String summery, String professinalTiltle, String identefire, String token, Integer rate, Set<Phoneofuser> phoneofusers, Set<SocialAccounts> socialAccountses, Set<Portofolioforuser> portofolioforusers, Set<Projectsforusers> projectsforuserses, Set<Porposa> porposas, Set<Postforprojects> postforprojectses, Set<Skilltable> skilltables) {
        this.userEmail = userEmail;
        this.userImageUrl = userImageUrl;
        this.password = password;
        this.gender = gender;
        this.userName = userName;
        this.ped = ped;
        this.country = country;
        this.governorate = governorate;
        this.city = city;
        this.street = street;
        this.summery = summery;
        this.professinalTiltle = professinalTiltle;
        this.identefire = identefire;
        this.token = token;
        this.rate = rate;
        this.phoneofusers = phoneofusers;
        this.socialAccountses = socialAccountses;
        this.portofolioforusers = portofolioforusers;
        this.projectsforuserses = projectsforuserses;
        this.porposas = porposas;
        this.postforprojectses = postforprojectses;
        this.skilltables = skilltables;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "userId", unique = true, nullable = false)
    public Integer getUserId() {
        return this.userId;
    }

    public void setUserId(Integer userId) {
        this.userId = userId;
    }

    @Column(name = "userEmail", unique = true, nullable = false)
    public String getUserEmail() {
        return this.userEmail;
    }

    public void setUserEmail(String userEmail) {
        this.userEmail = userEmail;
    }

    @Column(name = "userImageURL", nullable = false)
    public String getUserImageUrl() {
        return this.userImageUrl;
    }

    public void setUserImageUrl(String userImageUrl) {
        this.userImageUrl = userImageUrl;
    }

    @Column(name = "password", nullable = false)
    public String getPassword() {
        return this.password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    @Column(name = "gender", nullable = false)
    public boolean isGender() {
        return this.gender;
    }

    public void setGender(boolean gender) {
        this.gender = gender;
    }

    @Column(name = "userName", nullable = false)
    public String getUserName() {
        return this.userName;
    }

    public void setUserName(String userName) {
        this.userName = userName;
    }

    @Column(name = "ped", nullable = false)
    public int getPed() {
        return this.ped;
    }

    public void setPed(int ped) {
        this.ped = ped;
    }

    @Column(name = "country", nullable = false, length = 100)
    public String getCountry() {
        return this.country;
    }

    public void setCountry(String country) {
        this.country = country;
    }

    @Column(name = "governorate", nullable = false, length = 100)
    public String getGovernorate() {
        return this.governorate;
    }

    public void setGovernorate(String governorate) {
        this.governorate = governorate;
    }

    @Column(name = "city", nullable = false, length = 100)
    public String getCity() {
        return this.city;
    }

    public void setCity(String city) {
        this.city = city;
    }

    @Column(name = "street", length = 100)
    public String getStreet() {
        return this.street;
    }

    public void setStreet(String street) {
        this.street = street;
    }

    @Column(name = "summery")
    public String getSummery() {
        return this.summery;
    }

    public void setSummery(String summery) {
        this.summery = summery;
    }

    @Column(name = "professinalTiltle", nullable = false, length = 100)
    public String getProfessinalTiltle() {
        return this.professinalTiltle;
    }

    public void setProfessinalTiltle(String professinalTiltle) {
        this.professinalTiltle = professinalTiltle;
    }

    @Column(name = "identefire", length = 100)
    public String getIdentefire() {
        return this.identefire;
    }

    public void setIdentefire(String identefire) {
        this.identefire = identefire;
    }

    @Column(name = "token")
    public String getToken() {
        return this.token;
    }

    public void setToken(String token) {
        this.token = token;
    }

    @Column(name = "rate")
    public Integer getRate() {
        return this.rate;
    }

    public void setRate(Integer rate) {
        this.rate = rate;
    }

    @OneToMany(fetch = FetchType.EAGER, mappedBy = "users")
    public Set<Phoneofuser> getPhoneofusers() {
        return this.phoneofusers;
    }

    public void setPhoneofusers(Set<Phoneofuser> phoneofusers) {
        this.phoneofusers = phoneofusers;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
    public Set<SocialAccounts> getSocialAccountses() {
        return this.socialAccountses;
    }

    public void setSocialAccountses(Set<SocialAccounts> socialAccountses) {
        this.socialAccountses = socialAccountses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
    public Set<Portofolioforuser> getPortofolioforusers() {
        return this.portofolioforusers;
    }

    public void setPortofolioforusers(Set<Portofolioforuser> portofolioforusers) {
        this.portofolioforusers = portofolioforusers;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
    public Set<Projectsforusers> getProjectsforuserses() {
        return this.projectsforuserses;
    }

    public void setProjectsforuserses(Set<Projectsforusers> projectsforuserses) {
        this.projectsforuserses = projectsforuserses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
    public Set<Porposa> getPorposas() {
        return this.porposas;
    }

    public void setPorposas(Set<Porposa> porposas) {
        this.porposas = porposas;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
    public Set<Postforprojects> getPostforprojectses() {
        return this.postforprojectses;
    }

    public void setPostforprojectses(Set<Postforprojects> postforprojectses) {
        this.postforprojectses = postforprojectses;
    }

    @ManyToMany(fetch = FetchType.LAZY, mappedBy = "userses")
    public Set<Skilltable> getSkilltables() {
        return this.skilltables;
    }

    public void setSkilltables(Set<Skilltable> skilltables) {
        this.skilltables = skilltables;
    }

}
