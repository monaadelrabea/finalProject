package pojos;
// Generated Jun 2, 2016 7:43:06 PM by Hibernate Tools 4.3.1

import com.google.gson.annotations.Expose;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Porposa generated by hbm2java
 */
@Entity
@Table(name = "porposa", catalog = "itiproject"
)
public class Porposa implements java.io.Serializable {

    @Expose
    private Integer porpId;
    @Expose
    private Projectsforusers projectsforusers;
    @Expose
    private Users users;
    @Expose
    private int price;
    @Expose
    private Date startDatePor;
    @Expose
    private Date deadLinePor;
    @Expose
    private String statusOfPorposa;
    private Set<Details> detailses = new HashSet<Details>(0);

    public Porposa() {
    }

    public Porposa(Projectsforusers projectsforusers, Users users, int price, String statusOfPorposa) {
        this.projectsforusers = projectsforusers;
        this.users = users;
        this.price = price;
        this.statusOfPorposa = statusOfPorposa;
    }

    public Porposa(Projectsforusers projectsforusers, Users users, int price, Date startDatePor, Date deadLinePor, String statusOfPorposa, Set<Details> detailses) {
        this.projectsforusers = projectsforusers;
        this.users = users;
        this.price = price;
        this.startDatePor = startDatePor;
        this.deadLinePor = deadLinePor;
        this.statusOfPorposa = statusOfPorposa;
        this.detailses = detailses;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "porpId", unique = true, nullable = false)
    public Integer getPorpId() {
        return this.porpId;
    }

    public void setPorpId(Integer porpId) {
        this.porpId = porpId;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "projectIdPor", nullable = false)
    public Projectsforusers getProjectsforusers() {
        return this.projectsforusers;
    }

    public void setProjectsforusers(Projectsforusers projectsforusers) {
        this.projectsforusers = projectsforusers;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "suplierIdPor", nullable = false)
    public Users getUsers() {
        return this.users;
    }

    public void setUsers(Users users) {
        this.users = users;
    }

    @Column(name = "price", nullable = false)
    public int getPrice() {
        return this.price;
    }

    public void setPrice(int price) {
        this.price = price;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "startDatePor", length = 10)
    public Date getStartDatePor() {
        return this.startDatePor;
    }

    public void setStartDatePor(Date startDatePor) {
        this.startDatePor = startDatePor;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "deadLinePor", length = 10)
    public Date getDeadLinePor() {
        return this.deadLinePor;
    }

    public void setDeadLinePor(Date deadLinePor) {
        this.deadLinePor = deadLinePor;
    }

    @Column(name = "statusOfPorposa", nullable = false)
    public String getStatusOfPorposa() {
        return this.statusOfPorposa;
    }

    public void setStatusOfPorposa(String statusOfPorposa) {
        this.statusOfPorposa = statusOfPorposa;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "porposa")
    public Set<Details> getDetailses() {
        return this.detailses;
    }

    public void setDetailses(Set<Details> detailses) {
        this.detailses = detailses;
    }

}
